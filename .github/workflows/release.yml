name: Release Workflow

on:
  release:
    types: [published]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and tag Docker image
        run: |
          docker build -t user-access:${{ github.event.release.tag_name }} .
          docker tag user-access:${{ github.event.release.tag_name }} ghcr.io/${{ github.repository_owner }}/user-access:${{ github.event.release.tag_name }}

      - name: Install trivy
        run: |
          wget -qO- https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Run Trivy vulnerability scan
        run: trivy image user-access:${{ github.event.release.tag_name }} --format json > trivy-report.json

    #   - name: Update values.yaml
    #     run: |
    #       echo "replicaCount: 1" > argocd/values.yaml
    #       echo "image:" >> argocd/values.yaml
    #       echo "  tag: '${{ github.event.release.tag_name }}'" >> argocd/values.yaml

    #   - name: Commit and push values.yaml to cd-release branch
    #     run: |
    #       git config --global user.email "actions@github.com"
    #       git config --global user.name "GitHub Actions"
    #       git add argocd/values.yaml
    #       git commit -m "Update values.yaml for release ${{ github.event.release.tag_name }}"
    #       git push origin HEAD:cd-release

      - name: Update values.yaml with release tag
        run: |
          TAG=$(echo "${{ github.event.release.tag_name }}")
          git checkout cd-release
          git pull origin cd-release
          sed -i "s/tag: .*/tag: \"$TAG\"/" argocd/values.yaml
          git add .
          git commit -m "Update values.yaml for release $TAG"
          git push origin cd-release
